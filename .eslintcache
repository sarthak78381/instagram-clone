[{"D:\\React Course\\instagram-clone\\src\\redux\\user\\userAction.js":"1","D:\\React Course\\instagram-clone\\src\\App.js":"2","D:\\React Course\\instagram-clone\\src\\components\\signup\\signUpPage.jsx":"3","D:\\React Course\\instagram-clone\\src\\components\\header\\header.jsx":"4","D:\\React Course\\instagram-clone\\src\\redux\\rootReducer.js":"5","D:\\React Course\\instagram-clone\\src\\components\\userProfile\\userProfile.jsx":"6","D:\\React Course\\instagram-clone\\src\\components\\userPostPopUp\\userPostPopUp.jsx":"7","D:\\React Course\\instagram-clone\\src\\components\\addNewPost\\addNewPost.jsx":"8","D:\\React Course\\instagram-clone\\src\\index.js":"9","D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserAction.js":"10","D:\\React Course\\instagram-clone\\src\\Firebase\\firebase.utils.js":"11","D:\\React Course\\instagram-clone\\src\\components\\userPost\\userPost.jsx":"12","D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserSelector.js":"13","D:\\React Course\\instagram-clone\\src\\components\\headerUserInfo\\headerUserInfo.jsx":"14","D:\\React Course\\instagram-clone\\src\\redux\\user\\userReducer.js":"15","D:\\React Course\\instagram-clone\\src\\components\\signIn\\signIn.jsx":"16","D:\\React Course\\instagram-clone\\src\\components\\afterSignUpPage\\afterSignUpPage.jsx":"17","D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUser.saga.js":"18","D:\\React Course\\instagram-clone\\src\\redux\\user\\user.saga.js":"19","D:\\React Course\\instagram-clone\\src\\components\\userProfileRoute\\userProfileRoute.jsx":"20","D:\\React Course\\instagram-clone\\src\\components\\loader\\loader.jsx":"21","D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserTypes.js":"22","D:\\React Course\\instagram-clone\\src\\components\\post\\post.jsx":"23","D:\\React Course\\instagram-clone\\src\\components\\anotherUserProfile\\anotherUserProfile.jsx":"24","D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.types.js":"25","D:\\React Course\\instagram-clone\\src\\reportWebVitals.js":"26","D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.reducer.js":"27","D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.selector.js":"28","D:\\React Course\\instagram-clone\\src\\redux\\user\\userSelector.js":"29","D:\\React Course\\instagram-clone\\src\\redux\\user\\userTypes.js":"30","D:\\React Course\\instagram-clone\\src\\redux\\store.js":"31","D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.saga.js":"32","D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.action.js":"33","D:\\React Course\\instagram-clone\\src\\redux\\root.saga.js":"34","D:\\React Course\\instagram-clone\\src\\components\\userContent\\usersContent.jsx":"35","D:\\React Course\\instagram-clone\\src\\components\\addNewPost\\functionsTCrop.js":"36","D:\\React Course\\instagram-clone\\src\\components\\signup\\signup.jsx":"37","D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserReducer.js":"38","D:\\React Course\\instagram-clone\\src\\components\\users\\users.jsx":"39","D:\\React Course\\instagram-clone\\src\\redux\\posts\\functionsInReducers.js":"40","D:\\React Course\\instagram-clone\\src\\components\\header\\header-mobile\\header-mobile.jsx":"41","D:\\React Course\\instagram-clone\\src\\components\\header\\header-pc\\header-pc.jsx":"42","D:\\React Course\\instagram-clone\\src\\components\\userPostCollection\\userPostCollection.jsx":"43","D:\\React Course\\instagram-clone\\src\\components\\Notification\\Notification.jsx":"44","D:\\React Course\\instagram-clone\\src\\components\\seachUser\\SearchUser.jsx":"45","D:\\React Course\\instagram-clone\\src\\components\\addNewProfileImage\\AddNewProfileImage.jsx":"46","D:\\React Course\\instagram-clone\\src\\components\\showFollow\\ShowFollow.jsx":"47"},{"size":1792,"mtime":1614368179415,"results":"48","hashOfConfig":"49"},{"size":2588,"mtime":1614419485458,"results":"50","hashOfConfig":"49"},{"size":1774,"mtime":1611649641406,"results":"51","hashOfConfig":"49"},{"size":433,"mtime":1613995863752,"results":"52","hashOfConfig":"49"},{"size":349,"mtime":1613376386122,"results":"53","hashOfConfig":"49"},{"size":4183,"mtime":1614611015365,"results":"54","hashOfConfig":"49"},{"size":5075,"mtime":1613910029696,"results":"55","hashOfConfig":"49"},{"size":6751,"mtime":1614508858005,"results":"56","hashOfConfig":"49"},{"size":660,"mtime":1611474603930,"results":"57","hashOfConfig":"49"},{"size":2484,"mtime":1614537251663,"results":"58","hashOfConfig":"49"},{"size":11776,"mtime":1614417198149,"results":"59","hashOfConfig":"49"},{"size":1739,"mtime":1614606797834,"results":"60","hashOfConfig":"49"},{"size":697,"mtime":1614419429023,"results":"61","hashOfConfig":"49"},{"size":1933,"mtime":1614276460281,"results":"62","hashOfConfig":"49"},{"size":1835,"mtime":1614368162605,"results":"63","hashOfConfig":"49"},{"size":1578,"mtime":1612255594736,"results":"64","hashOfConfig":"49"},{"size":2146,"mtime":1612194247891,"results":"65","hashOfConfig":"49"},{"size":4536,"mtime":1614362497746,"results":"66","hashOfConfig":"49"},{"size":2816,"mtime":1614367436916,"results":"67","hashOfConfig":"49"},{"size":1186,"mtime":1614607305744,"results":"68","hashOfConfig":"49"},{"size":192,"mtime":1612367155028,"results":"69","hashOfConfig":"49"},{"size":968,"mtime":1614537194737,"results":"70","hashOfConfig":"49"},{"size":4742,"mtime":1614535410552,"results":"71","hashOfConfig":"49"},{"size":6016,"mtime":1614610903988,"results":"72","hashOfConfig":"49"},{"size":325,"mtime":1613890144705,"results":"73","hashOfConfig":"49"},{"size":362,"mtime":1609755951921,"results":"74","hashOfConfig":"49"},{"size":948,"mtime":1614179034392,"results":"75","hashOfConfig":"49"},{"size":191,"mtime":1613760454441,"results":"76","hashOfConfig":"49"},{"size":808,"mtime":1614367650611,"results":"77","hashOfConfig":"49"},{"size":687,"mtime":1614368010763,"results":"78","hashOfConfig":"49"},{"size":524,"mtime":1611562259507,"results":"79","hashOfConfig":"49"},{"size":2561,"mtime":1614410577145,"results":"80","hashOfConfig":"49"},{"size":1131,"mtime":1614412148873,"results":"81","hashOfConfig":"49"},{"size":362,"mtime":1613380555987,"results":"82","hashOfConfig":"49"},{"size":796,"mtime":1614094063333,"results":"83","hashOfConfig":"49"},{"size":2315,"mtime":1613719731152,"results":"84","hashOfConfig":"49"},{"size":1116,"mtime":1611689443779,"results":"85","hashOfConfig":"49"},{"size":2686,"mtime":1614537300827,"results":"86","hashOfConfig":"49"},{"size":931,"mtime":1614410330463,"results":"87","hashOfConfig":"49"},{"size":621,"mtime":1613911334915,"results":"88","hashOfConfig":"49"},{"size":648,"mtime":1614190077030,"results":"89","hashOfConfig":"49"},{"size":935,"mtime":1614275753006,"results":"90","hashOfConfig":"49"},{"size":423,"mtime":1614026089939,"results":"91","hashOfConfig":"49"},{"size":3225,"mtime":1614506341133,"results":"92","hashOfConfig":"49"},{"size":2907,"mtime":1614368609365,"results":"93","hashOfConfig":"49"},{"size":5660,"mtime":1614537500040,"results":"94","hashOfConfig":"49"},{"size":1235,"mtime":1614610734745,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1koshrm",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"195"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"139"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React Course\\instagram-clone\\src\\redux\\user\\userAction.js",[],["210","211"],"D:\\React Course\\instagram-clone\\src\\App.js",["212"],"import React, {useEffect} from 'react';\n\nimport './App.css';\nimport UserPost from \"./components/userPost/userPost\";\nimport UserSignIn from \"./components/signIn/signIn\";\nimport UserSignUp from \"./components/signup/signup\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {firestore, auth} from './Firebase/firebase.utils';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport Header from './components/header/header';\nimport { getCurrentUser, getIsSignedIn } from './redux/mainUser/mainUserSelector';\nimport { checkCurrentUser, signOut } from './redux/mainUser/mainUserAction';\nimport User from './components/users/users';\nimport {loadUserNotification, newNotificationUnSeen} from './redux/mainUser/mainUserAction';\nimport Notification from './components/Notification/Notification';\nimport SearchUser from './components/seachUser/SearchUser';\n\n\n\n\n\nfunction App({currentUser, checkingCurrentUser, getUserNotification, newNotification, signingOut, isSignedIn}) {\n  useEffect(() => {\n    checkingCurrentUser();\n    currentUser && firestore.doc(`notifications/${currentUser.userName}`).onSnapshot(snapshot => {\n      const notificationData = {...snapshot.data()};\n      Object.keys(notificationData).length > 0 && notificationData.newNotification?.length > 0 && newNotification();\n      getUserNotification({...snapshot.data()})\n    })\n  }, [getUserNotification, isSignedIn]);  \n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path='/' component={UserPost}/>\n        <Route path='/signin' render={() => {\n          return currentUser ? <Redirect to='/'/>:<UserSignIn/>\n        }} />\n        <Route path='/signup' render={() => {\n          return currentUser ? <Redirect to='/'/>:<UserSignUp/>\n        }} />\n        <Route path='/users' component={User}/>\n        <Route path='/notification' component={Notification}/>\n        <Route path='/search' component={SearchUser}/>\n        <Route path='/logout' render = {() => {\n          auth.signOut();\n          signingOut();\n        }}/>\n      </Switch>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  checkingCurrentUser: () => dispatch(checkCurrentUser()),\n  getUserNotification: (Notification) => dispatch(loadUserNotification(Notification)),\n  newNotification: () => dispatch(newNotificationUnSeen()),\n  signingOut: () => dispatch(signOut())\n})\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: getCurrentUser,\n  isSignedIn: getIsSignedIn\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n",["213","214"],"D:\\React Course\\instagram-clone\\src\\components\\signup\\signUpPage.jsx",[],["215","216"],"D:\\React Course\\instagram-clone\\src\\components\\header\\header.jsx",[],["217","218"],"D:\\React Course\\instagram-clone\\src\\redux\\rootReducer.js",[],"D:\\React Course\\instagram-clone\\src\\components\\userProfile\\userProfile.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\userPostPopUp\\userPostPopUp.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\addNewPost\\addNewPost.jsx",["219"],"import React, {useState, useCallback} from 'react';\r\nimport firebase from 'firebase';\r\nimport {fireStorage, firestore} from '../../Firebase/firebase.utils';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {getCurrentUser} from '../../redux/mainUser/mainUserSelector';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {changeInCurrentUser} from '../../redux/mainUser/mainUserAction';\r\nimport {addNewPost} from '../../redux/posts/posts.action';\r\nimport Button from '@material-ui/core/Button';\r\nimport Cropper from 'react-easy-crop';\r\nimport {getCroppedImg} from './functionsTCrop';\r\n\r\nimport './addNewPost.scss';\r\n\r\nconst AddNewPost = ({currentUser, uploadPost}) => {\r\n    const {userName} = currentUser;\r\n    const inputRef = React.useRef();\r\n    \r\n    const [caption, setCaption] = useState('');\r\n    const [oldImage, setOldImage] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n    const [crop, setCrop] = useState({x: 0, y: 0});\r\n    const [cropped, setCroppedArea] = useState(null);\r\n    const [croppedImage, setCroppedImage] = useState(null);\r\n    const [zoom, setZoom] = useState(1);\r\n    const [uploaded, checkUploaded] = useState(false);\r\n    const [blob, setBlob] = useState(null);\r\n    const [progress, checkProgress] = useState(0);\r\n    \r\n    const handleChange = (e) => {\r\n        if(e.target.files.length > 0){\r\n            setCroppedImage(null);\r\n            setOldImage(e.target.files[0]);\r\n            const ImageUrl = URL.createObjectURL(e.target.files[0]);\r\n            setImage(ImageUrl);\r\n        }\r\n    }\r\n    \r\n    const showCroppedImage = useCallback(async () => {\r\n        try {\r\n            let croppedImage = await getCroppedImg(\r\n                image,\r\n                cropped,\r\n                setBlob,\r\n                oldImage\r\n            )\r\n                setImage(null);\r\n                setCroppedImage(croppedImage)\r\n\r\n            } catch (e) {\r\n                console.error(e)\r\n        }\r\n      }, [cropped])\r\n\r\n \r\n\r\n    const handlePopUp = () => inputRef.current.click();\r\n\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n        setCroppedArea(croppedAreaPixels)\r\n      }, [])\r\n\r\n\r\n    const handleUpload = (e) => {\r\n        const uploadTask = fireStorage.ref(`images/${blob.name}`).put(blob);\r\n        uploadTask.on(\r\n            'state_changed',\r\n            (snapshot) => {\r\n                const getProgress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n\r\n                return checkProgress(getProgress);\r\n            },\r\n            (error) => {\r\n                return alert(error.message);\r\n            },\r\n            () => {\r\n                fireStorage\r\n                  .ref(\"images\")\r\n                  .child(blob.name)\r\n                  .getDownloadURL()\r\n                  .then(url => {\r\n                      const checking = async () => {\r\n                        const userPostRef = firestore.doc(`post/${userName}`);\r\n                        const userEachPostRef = firestore.collection(`userPosts`).doc();\r\n                        const snapshot = await userPostRef.get();\r\n                        const userPostData = {...snapshot.data()};\r\n                        const newPost = {\r\n                            caption,\r\n                            imageUrl: url,\r\n                            imageName: blob.name,\r\n                            likes: [],\r\n                            comments: [],\r\n                            userName,\r\n                            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            uid: userEachPostRef.id,\r\n                        }\r\n                        await userEachPostRef.set({\r\n                            ...newPost\r\n                        })\r\n\r\n                        if(snapshot.exists) {\r\n                            await userPostRef.update({\r\n                            posts: [\r\n                                ...userPostData.posts,\r\n                                userEachPostRef.id\r\n                            ],\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n                        })\r\n                        } else {\r\n                        await userPostRef.set({\r\n                            posts: [\r\n                                userEachPostRef.id\r\n                            ],\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n                        })}\r\n                        uploadPost(newPost);\r\n                      }\r\n\r\n                      checking();\r\n                      alert(\"uploaded\")\r\n                      checkUploaded(true);\r\n                })\r\n\r\n            }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    return uploaded ? <Redirect to='/'/> : (\r\n        <div className='newPost__Container'>\r\n                <div className=\"crop-container\">\r\n                    {croppedImage && !image ? (\r\n                        <img src={croppedImage} alt=\"\" className='postImage__cropped'/>\r\n                    ): (\r\n                        <Cropper image={image} crop={crop} aspect={4/4} zoom={zoom} onCropChange={setCrop} onZoomChange={setZoom} onCropComplete={onCropComplete}/>\r\n                    )}\r\n                </div>\r\n                <div className=\"crop-btn\">\r\n                    <Button variant='contained' onClick={handlePopUp} className='choose_btn'>Choose</Button>\r\n                    <Button variant='contained' color='secondary' disabled={image ? false :true} onClick={showCroppedImage}>Done</Button>\r\n                </div>\r\n                <div className='post_info'>\r\n                    <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" onChange={handleChange} className='newPost__Image' ref={inputRef} hidden/>\r\n                    <input type=\"text\" placeholder='Enter A Caption...' value={caption} onChange={e => setCaption(e.target.value)}/>\r\n                    <div id=\"myProgress\">\r\n                        <div id=\"myBar\" style={{width: `${progress}%`}}></div>\r\n                    </div>\r\n                    <Button variant='contained' color='primary' onClick={handleUpload} disabled={croppedImage?false:true}>\r\n                        Upload\r\n                    </Button>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    currentUser: getCurrentUser,\r\n})\r\n\r\nconst mapDispatchTProps = dispatch => ({\r\n    changedCurrentUser: (updatedUser) => dispatch(changeInCurrentUser(updatedUser)),\r\n    uploadPost: (post) => dispatch(addNewPost(post))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchTProps)(AddNewPost);",["220","221"],"D:\\React Course\\instagram-clone\\src\\index.js",[],"D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserAction.js",[],"D:\\React Course\\instagram-clone\\src\\Firebase\\firebase.utils.js",[],["222","223"],"D:\\React Course\\instagram-clone\\src\\components\\userPost\\userPost.jsx",[],"D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserSelector.js",[],"D:\\React Course\\instagram-clone\\src\\components\\headerUserInfo\\headerUserInfo.jsx",[],"D:\\React Course\\instagram-clone\\src\\redux\\user\\userReducer.js",[],"D:\\React Course\\instagram-clone\\src\\components\\signIn\\signIn.jsx",[],["224","225"],"D:\\React Course\\instagram-clone\\src\\components\\afterSignUpPage\\afterSignUpPage.jsx",[],["226","227"],"D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUser.saga.js",[],"D:\\React Course\\instagram-clone\\src\\redux\\user\\user.saga.js",[],"D:\\React Course\\instagram-clone\\src\\components\\userProfileRoute\\userProfileRoute.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\loader\\loader.jsx",[],["228","229"],"D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserTypes.js",[],"D:\\React Course\\instagram-clone\\src\\components\\post\\post.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\anotherUserProfile\\anotherUserProfile.jsx",[],"D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.types.js",[],"D:\\React Course\\instagram-clone\\src\\reportWebVitals.js",[],["230","231"],"D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.reducer.js",[],["232","233"],"D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.selector.js",[],["234","235"],"D:\\React Course\\instagram-clone\\src\\redux\\user\\userSelector.js",[],["236","237"],"D:\\React Course\\instagram-clone\\src\\redux\\user\\userTypes.js",[],"D:\\React Course\\instagram-clone\\src\\redux\\store.js",[],"D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.saga.js",[],"D:\\React Course\\instagram-clone\\src\\redux\\posts\\posts.action.js",[],"D:\\React Course\\instagram-clone\\src\\redux\\root.saga.js",[],"D:\\React Course\\instagram-clone\\src\\components\\userContent\\usersContent.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\addNewPost\\functionsTCrop.js",[],"D:\\React Course\\instagram-clone\\src\\components\\signup\\signup.jsx",[],"D:\\React Course\\instagram-clone\\src\\redux\\mainUser\\mainUserReducer.js",[],"D:\\React Course\\instagram-clone\\src\\components\\users\\users.jsx",[],["238","239"],"D:\\React Course\\instagram-clone\\src\\redux\\posts\\functionsInReducers.js",[],["240","241"],"D:\\React Course\\instagram-clone\\src\\components\\header\\header-mobile\\header-mobile.jsx",[],["242","243"],"D:\\React Course\\instagram-clone\\src\\components\\header\\header-pc\\header-pc.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\userPostCollection\\userPostCollection.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\Notification\\Notification.jsx",["244","245"],"\r\nimport React, {useEffect} from 'react';\r\nimport './Notification.scss';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {loadCurrentUserNotification, getCurrentUser} from '../../redux/mainUser/mainUserSelector';\r\nimport {updateNotification} from '../../redux/mainUser/mainUserAction';\r\n\r\nfunction Notification({notification, updatingNotification, currentUser}) {\r\n    const {newNotification, oldNotification} = notification;\r\n    useEffect(() => {\r\n        return () => {\r\n            newNotification?.length > 0 && updatingNotification(newNotification, currentUser.userName)\r\n        }\r\n    })\r\n    return (\r\n        <div className='notification__container'>\r\n            <div className=\"notification new__notification\">\r\n                <h4>New Notifications</h4>\r\n                {\r\n                    newNotification ? newNotification.map((obj, index) => (\r\n                        <div className='eachNotification' key={index}>\r\n                            <div className='eachNotification__content'>\r\n                                <div className=\"eachNotification__writtenContent\">\r\n                                    <p>{`${obj.userName} ${obj.notification}`}</p>\r\n                                </div>\r\n                                <div className='eachNotification__postContent'>\r\n                                    <img src={obj.post.imageUrl} className='eachNotification__image'/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )):(\r\n                        <div className=\"eachNotification\">\r\n                            <span className=\"eachNotification__content\">No New Notification</span>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"notification old__notification\">\r\n                <h4>Old Notifications</h4>\r\n                {\r\n                    oldNotification?.map((obj, index) => {\r\n                        console.log(oldNotification.length)\r\n                        return (\r\n                        <div className='eachNotification' key={index}>\r\n                            <div className='eachNotification__content'>\r\n                                <div className=\"eachNotification__writtenContent\">\r\n                                    <p>{`${obj.userName} ${obj.notification}`}</p>\r\n                                </div>\r\n                                <div className='eachNotification__postContent'>\r\n                                    <img src={obj.post.imageUrl} className='eachNotification__image'/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )})\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    notification: loadCurrentUserNotification,\r\n    currentUser: getCurrentUser\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updatingNotification: (notification, user) => dispatch(updateNotification(notification, user))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\r\n","D:\\React Course\\instagram-clone\\src\\components\\seachUser\\SearchUser.jsx",["246"],"import React, {useState, useEffect} from 'react';\r\nimport {firestore} from '../../Firebase/firebase.utils';\r\nimport {loadProfileBySearch, profileLoadedBySearch} from '../../redux/user/userAction';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './searchUser.scss'\r\n\r\nfunction SearchUser({loadProfile, loadProfileBySearch}) {\r\n    const [searchContent, getSearchContent] = useState('');\r\n    const [searchResult, getSearchResult] = useState([]);\r\n    \r\n    const checkRef = firestore.collection('users');\r\n    useEffect(() => {\r\n        if(searchContent.length === 0) {\r\n            getSearchResult([])\r\n        }\r\n        if(searchContent.length === 1) {\r\n            let userArr = []\r\n            checkRef.where('searchKey', '==', searchContent.toUpperCase()).limit(10).get().then(snapshot => {\r\n                snapshot.docs.map(user => {\r\n                    return userArr = [\r\n                        ...userArr,\r\n                        {...user.data()}\r\n                    ]\r\n                })\r\n                getSearchResult(userArr) \r\n            })\r\n        }\r\n        if(searchResult && searchContent.length > 1){\r\n            let userArr = []\r\n            userArr = searchResult.filter(user => {\r\n                return user.userName.toUpperCase().includes(searchContent.toUpperCase())\r\n            })\r\n            getSearchResult(userArr);\r\n        }\r\n    }, [searchContent]) \r\n\r\n    const handleChange = e => {\r\n        getSearchContent(e.target.value);\r\n    }\r\n    return (\r\n        <div className='searchUser__container'>\r\n            <div className=\"searchUser\">\r\n                <input type=\"text\" placeholder='Search' className='search__input' onChange={handleChange} value={searchContent}/>\r\n                <div className=\"search__result\">\r\n                    {\r\n                        searchResult && searchResult.map((user, index) => (\r\n                            <div className=\"searchUser__resultContainer\" key={index}>\r\n                                <div >\r\n                                    <Avatar className='userProfileImage' alt='Sarthak' src={user.profileImg}/>\r\n                                </div>\r\n                                <p onClick={() => {\r\n                                    loadProfileBySearch();\r\n                                    loadProfile(user);\r\n                                }}><Link to={`users/${user.userName}`}>{user.userName}</Link></p>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadProfile: (profile) => dispatch(loadProfileBySearch(profile)),\r\n    loadProfileBySearch: () => dispatch(profileLoadedBySearch())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchUser);\r\n","D:\\React Course\\instagram-clone\\src\\components\\addNewProfileImage\\AddNewProfileImage.jsx",["247"],"D:\\React Course\\instagram-clone\\src\\components\\showFollow\\ShowFollow.jsx",[],{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":31,"column":6,"nodeType":"254","endLine":31,"endColumn":29,"suggestions":"255"},{"ruleId":"248","replacedBy":"256"},{"ruleId":"250","replacedBy":"257"},{"ruleId":"248","replacedBy":"258"},{"ruleId":"250","replacedBy":"259"},{"ruleId":"248","replacedBy":"260"},{"ruleId":"250","replacedBy":"261"},{"ruleId":"252","severity":1,"message":"262","line":54,"column":10,"nodeType":"254","endLine":54,"endColumn":19,"suggestions":"263"},{"ruleId":"248","replacedBy":"264"},{"ruleId":"250","replacedBy":"265"},{"ruleId":"248","replacedBy":"266"},{"ruleId":"250","replacedBy":"267"},{"ruleId":"248","replacedBy":"268"},{"ruleId":"250","replacedBy":"269"},{"ruleId":"248","replacedBy":"270"},{"ruleId":"250","replacedBy":"271"},{"ruleId":"248","replacedBy":"272"},{"ruleId":"250","replacedBy":"273"},{"ruleId":"248","replacedBy":"274"},{"ruleId":"250","replacedBy":"275"},{"ruleId":"248","replacedBy":"276"},{"ruleId":"250","replacedBy":"277"},{"ruleId":"248","replacedBy":"278"},{"ruleId":"250","replacedBy":"279"},{"ruleId":"248","replacedBy":"280"},{"ruleId":"250","replacedBy":"281"},{"ruleId":"248","replacedBy":"282"},{"ruleId":"250","replacedBy":"283"},{"ruleId":"248","replacedBy":"284"},{"ruleId":"250","replacedBy":"285"},{"ruleId":"248","replacedBy":"286"},{"ruleId":"250","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":28,"column":37,"nodeType":"290","endLine":28,"endColumn":103},{"ruleId":"288","severity":1,"message":"289","line":51,"column":37,"nodeType":"290","endLine":51,"endColumn":103},{"ruleId":"252","severity":1,"message":"291","line":37,"column":8,"nodeType":"254","endLine":37,"endColumn":23,"suggestions":"292"},{"ruleId":"252","severity":1,"message":"262","line":54,"column":10,"nodeType":"254","endLine":54,"endColumn":19,"suggestions":"293"},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkingCurrentUser', 'currentUser', and 'newNotification'. Either include them or remove the dependency array. If 'checkingCurrentUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["296"],["294"],["295"],["294"],["295"],["294"],["295"],"React Hook useCallback has missing dependencies: 'image' and 'oldImage'. Either include them or remove the dependency array.",["297"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],["294"],["295"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'checkRef' and 'searchResult'. Either include them or remove the dependency array.",["298"],["299"],"no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"302","fix":"306"},"Update the dependencies array to be: [checkingCurrentUser, currentUser, getUserNotification, newNotification]",{"range":"307","text":"308"},"Update the dependencies array to be: [cropped, image, oldImage]",{"range":"309","text":"310"},"Update the dependencies array to be: [checkRef, searchContent, searchResult]",{"range":"311","text":"312"},{"range":"313","text":"310"},[1395,1418],"[checkingCurrentUser, currentUser, getUserNotification, newNotification]",[2007,2016],"[cropped, image, oldImage]",[1462,1477],"[checkRef, searchContent, searchResult]",[1906,1915]]