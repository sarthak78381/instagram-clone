[{"D:\\React Course\\instagram-clone\\src\\redux\\user\\userAction.js":"1","D:\\React Course\\instagram-clone\\src\\App.js":"2","D:\\React Course\\instagram-clone\\src\\components\\signup\\signUpPage.jsx":"3","D:\\React Course\\instagram-clone\\src\\components\\header\\header.jsx":"4","D:\\React Course\\instagram-clone\\src\\redux\\rootReducer.js":"5","D:\\React Course\\instagram-clone\\src\\components\\userProfile\\userProfile.jsx":"6","D:\\React Course\\instagram-clone\\src\\components\\userPostPopUp\\userPostPopUp.jsx":"7","D:\\React Course\\instagram-clone\\src\\components\\addNewPost\\addNewPost.jsx":"8"},{"size":1444,"mtime":1612690130604,"results":"9","hashOfConfig":"10"},{"size":2206,"mtime":1613069277239,"results":"11","hashOfConfig":"10"},{"size":1774,"mtime":1611649641406,"results":"12","hashOfConfig":"10"},{"size":862,"mtime":1611429239508,"results":"13","hashOfConfig":"10"},{"size":275,"mtime":1611513521225,"results":"14","hashOfConfig":"10"},{"size":3574,"mtime":1612940759160,"results":"15","hashOfConfig":"10"},{"size":2023,"mtime":1612680712711,"results":"16","hashOfConfig":"10"},{"size":4683,"mtime":1613228384908,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1koshrm",{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React Course\\instagram-clone\\src\\redux\\user\\userAction.js",[],"D:\\React Course\\instagram-clone\\src\\App.js",["35","36","37","38"],"import React, {useEffect} from 'react';\n\nimport './App.css';\nimport UserPost from \"./components/userPost/userPost\";\nimport UserSignIn from \"./components/signIn/signIn\";\nimport UserSignUp from \"./components/signup/signup\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport Header from './components/header/header';\nimport { getCurrentUser } from './redux/mainUser/mainUserSelector';\nimport { checkCurrentUser } from './redux/mainUser/mainUserAction';\nimport User from './components/users/users';\nimport {userPostLoaded} from './redux/user/userAction'\nimport {firestore} from './Firebase/firebase.utils'\n\n\n\n\n\nfunction App({currentUser, checkingCurrentUser, loadUserPost}) {\n  useEffect(() => {\n    checkingCurrentUser();\n    let obj = []\n    const postRef = firestore.collection(`post`).orderBy('timestamp', 'desc');\n    const postSnapshot = postRef.get();\n    postSnapshot.then(posts => {\n      const postDocs = posts.docs;\n      let check = checking();\n      for(let j = 0; j < postDocs.length; j++) {\n        check(postDocs)\n      }\n    })\n  }, [checkingCurrentUser, loadUserPost]);  \n\n\n  function checking(){\n    let i = 0;\n    let newArr = [];\n    return (postsArr) => {\n      postsArr.map(post => {\n        let postObj = post.data().posts;\n        let postArr = Object.values(postObj).reverse();\n      })\n      return i++\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path='/' component={UserPost}/>\n        <Route path='/signin' render={() => {\n          return currentUser ? <Redirect to='/'/>:<UserSignIn/>\n        }} />\n        <Route path='/signup' render={() => {\n          return currentUser ? <Redirect to='/'/>:<UserSignUp/>\n        }} />\n        <Route path='/users' component={User}/>\n      </Switch>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  checkingCurrentUser: () => dispatch(checkCurrentUser()),\n  loadUserPost: (post) => dispatch(userPostLoaded(post))\n})\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: getCurrentUser,\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","D:\\React Course\\instagram-clone\\src\\components\\signup\\signUpPage.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\header\\header.jsx",[],"D:\\React Course\\instagram-clone\\src\\redux\\rootReducer.js",[],"D:\\React Course\\instagram-clone\\src\\components\\userProfile\\userProfile.jsx",["39","40","41"],"D:\\React Course\\instagram-clone\\src\\components\\userPostPopUp\\userPostPopUp.jsx",[],"D:\\React Course\\instagram-clone\\src\\components\\addNewPost\\addNewPost.jsx",["42"],{"ruleId":"43","severity":1,"message":"44","line":24,"column":9,"nodeType":"45","messageId":"46","endLine":24,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":39,"column":9,"nodeType":"45","messageId":"46","endLine":39,"endColumn":15},{"ruleId":"48","severity":1,"message":"49","line":41,"column":25,"nodeType":"50","messageId":"51","endLine":41,"endColumn":27},{"ruleId":"43","severity":1,"message":"52","line":43,"column":13,"nodeType":"45","messageId":"46","endLine":43,"endColumn":20},{"ruleId":"43","severity":1,"message":"53","line":9,"column":9,"nodeType":"45","messageId":"46","endLine":9,"endColumn":17},{"ruleId":"43","severity":1,"message":"54","line":9,"column":25,"nodeType":"45","messageId":"46","endLine":9,"endColumn":30},{"ruleId":"55","severity":1,"message":"56","line":20,"column":8,"nodeType":"57","endLine":20,"endColumn":10,"suggestions":"58"},{"ruleId":"43","severity":1,"message":"59","line":13,"column":12,"nodeType":"45","messageId":"46","endLine":13,"endColumn":14},"no-unused-vars","'obj' is assigned a value but never used.","Identifier","unusedVar","'newArr' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'postArr' is assigned a value but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.userName' and 'gettingUserPost'. Either include them or remove the dependency array. If 'gettingUserPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["60"],"'id' is assigned a value but never used.",{"desc":"61","fix":"62"},"Update the dependencies array to be: [currentUser.userName, gettingUserPost]",{"range":"63","text":"64"},[830,832],"[currentUser.userName, gettingUserPost]"]